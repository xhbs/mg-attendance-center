<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志组件启动时，打印调试信息，并监控此文件变化，周期300秒 -->
<configuration scan="true" scanPeriod="300 seconds" debug="false">
    <springProperty scope="context" name="LOG_HOME" source="logback.file.path" defaultValue="/var/logs"/>
    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="mg-attendance-center"/>

    <!--    控制台输出-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder  class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern> %d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}:%line) - %msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder >
    </appender>
    <!--标准输出  记录日志-->
    <appender name="STDOUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%line - %msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/${APP_NAME}/%d{yyyy-MM-dd}stdout-%i.log.gz
            </FileNamePattern>
            <!--日志文件保留天数-->
            <!--日志文件保留天数-->
            <maxHistory>15</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <!-- 只要DEBUG 级别以上的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>
    <!--    业务日志-->
    <appender name="APP" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 只要INFO 级别以上的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%line - %msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/${APP_NAME}/%d{yyyy-MM-dd}app-%i.log.gz</FileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>15</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
    </appender>
    <!--    错误日志-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 只要ERROR 级别以上的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern> %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%line - %msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${APP_NAME}/%d{yyyy-MM-dd}error-%i.log.gz</fileNamePattern>
            <!--日志文件保留天数-->
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
    </appender>
    <!--app日志采用异步日志-->
    <appender name="asyncFileAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>500</queueSize>
        <appender-ref ref="APP"/>
    </appender>

    <root level="debug" >
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ERROR"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="APP"/>
    </root>

    <!-- 打印sql  -->
    <!--<logger name="java.sql.Connection" level="DEBUG"/>-->
    <!--<logger name="java.sql.Statement" level="DEBUG"/>-->
    <!--<logger name="java.sql.PreparedStatement" level="DEBUG"/>-->
    <!--<logger name="com.fasterxml.jackson" level="INFO"/>-->
    <logger name="org.apache.kafka" level="ERROR"/>
    <logger name="org.springframework.kafka" level="ERROR"/>


</configuration>